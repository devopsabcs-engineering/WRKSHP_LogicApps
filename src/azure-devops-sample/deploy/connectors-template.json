{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "16697573911663408943"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "metadata": {
        "description": "The datacenter to use for the deployment."
      }
    },
    "logicAppSystemAssignedIdentityTenantId": {
      "type": "string"
    },
    "logicAppSystemAssignedIdentityObjectId": {
      "type": "string"
    },
    "sa_name": {
      "type": "string",
      "defaultValue": "sa"
    },
    "connections_azureblob_name": {
      "type": "string",
      "defaultValue": "azureblob"
    }
  },
  "variables": {
    "storageAccountName": "[format('{0}{1}', toLower(parameters('sa_name')), uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', 'blobs')]",
      "properties": {
        "defaultEncryptionScope": "$account-encryption-key",
        "denyEncryptionScopeOverride": false,
        "publicAccess": "Container"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections/accessPolicies",
      "apiVersion": "2016-06-01",
      "name": "[format('{0}/{1}', parameters('connections_azureblob_name'), parameters('logicAppSystemAssignedIdentityObjectId'))]",
      "location": "[parameters('location')]",
      "properties": {
        "principal": {
          "type": "ActiveDirectory",
          "identity": {
            "tenantId": "[parameters('logicAppSystemAssignedIdentityTenantId')]",
            "objectId": "[parameters('logicAppSystemAssignedIdentityObjectId')]"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "allowBlobPublicAccess": true,
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('connections_azureblob_name')]",
      "location": "[parameters('location')]",
      "properties": {
        "displayName": "privatestorage",
        "parameterValues": {
          "accountName": "[variables('storageAccountName')]",
          "accessKey": "[concat(listKeys(format('{0}/providers/Microsoft.Storage/storageAccounts/{1}', resourceGroup().id, variables('storageAccountName')), '2023-05-01').keys[0].value)]"
        },
        "api": {
          "id": "[resourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'azureblob')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    }
  ]
}