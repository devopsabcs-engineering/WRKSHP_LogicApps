trigger:
  - main

pr: none

variables:
  - name: devEnvironment
    value: WRKSHP_IS_LogicApp_dev_006
  - name: devEnvironmentApp
    value: WRKSHP_IS_LogicApp_dev_006_logic-app
  - name: vmImage
    value: windows-latest
  - name: serviceConnection
    value: "WRKSHP_IS_ME-MngEnvMCAP675646-emknafo-1 (64c3d212-40ed-4c6d-a825-6adfbdf25dad)-4734"
  - name: resourceGroupName
    value: "rg-iac-pipeline-006"
  - name: resourceGroupLocation
    value: "canadacentral"
  - name: templateFile
    value: infra/main.bicep
  - name: deploymentName
    value: "iac-deployment-006"
  - name: projectFile
    value: "src/logic-vvihbnryoetdu/logic-vvihbnryoetdu.csproj"

pool:
  vmImage: $(vmImage)

stages:
  - stage: Build
    displayName: "Build"
    jobs:
      - job: Set_tag_for_version
        displayName: set version once
        steps:
          - checkout: self
            persistCredentials: true
            fetchDepth: 0
          - task: gitversion/setup@3
            enabled: true
            displayName: "Install GitTools"
            inputs:
              versionSpec: "5.x"
          - task: gitversion/execute@3
            enabled: true
            displayName: "Calculate SemVer"
          - script: echo current version is $(GitVersion.SemVer)
            displayName: "Display calculated version"
          - task: CmdLine@2
            enabled: true
            displayName: Init git global config
            inputs:
              script: |
                git config --global user.email $(Build.RequestedForEmail)
                git config --global user.name $(Build.RequestedFor)
          - task: CmdLine@2
            enabled: true
            displayName: Create Git tag for current version
            inputs:
              script: |
                git tag -a $(GitVersion.SemVer) -m "Main version $(GitVersion.SemVer)"
                git push origin $(GitVersion.SemVer)
      - job: BuildJob
        displayName: "Build Job"
        dependsOn: Set_tag_for_version
        steps:
          - checkout: self
          # build and deploy logic app in dotnet 6
          - task: UseDotNet@2
            displayName: "Use .NET Core sdk 6.x"
            inputs:
              packageType: "sdk"
              version: "6.x"
              installationPath: $(Agent.ToolsDirectory)/dotnet
          - script: dotnet build $(projectFile)
            displayName: "Build Logic App"
          - script: dotnet publish $(projectFile) --output $(Build.ArtifactStagingDirectory)
            displayName: "Publish Logic App"
          # publish artifact
          - task: PublishBuildArtifacts@1
            displayName: "Publish Artifact"
            inputs:
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: "logic-app"
              publishLocation: "Container"
  - stage: DeployInfra
    displayName: "Deploy Infrastructure"
    dependsOn: Build
    jobs:
      - deployment: DeployInfraJob
        displayName: "Deploy Infrastructure Job"
        environment: $(devEnvironment)
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                # azure cli task to login to azure
                - task: AzureCLI@2
                  displayName: "deploy infrastructure using bicep"
                  inputs:
                    azureSubscription: "$(serviceConnection)"
                    scriptType: "pscore"
                    scriptLocation: "inlineScript"
                    inlineScript: |
                      az account show
                      az group create --name $(resourceGroupName) `
                        --location $(resourceGroupLocation)
                      # deploy
                      az deployment group create --resource-group $(resourceGroupName) `
                        --template-file $(templateFile) `
                        --name $(deploymentName)
  - stage: DeployLogicApp
    displayName: "Deploy Logic App"
    dependsOn: DeployInfra
    jobs:
      - deployment: DeployLogicAppJob
        displayName: "Deploy Logic App Job"
        environment: $(devEnvironmentApp)
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                # download artifact then deploy to standard logic app - app service
                - task: DownloadBuildArtifacts@0
                  displayName: "Download Artifact"
                  inputs:
                    buildType: "current"
                    downloadType: "single"
                    artifactName: "logic-app"
                    downloadPath: "$(System.ArtifactsDirectory)"
                - task: AzureRmWebAppDeployment@4
                  displayName: "Deploy Logic App"
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: "$(serviceConnection)"
                    appType: "webApp"
                    WebAppName: "logic-app-$(Build.BuildId)"
                    package: "$(System.ArtifactsDirectory)/logic-app"
                    enableCustomDeployment: true
                    deploymentMethod: "auto"
                    ResourceGroupName: "$(resourceGroupName)"
                    SlotName: "production"
                    TakeAppOfflineFlag: false
                    JSONFiles: "**/appsettings.json"
                    AppSettings: "-ASPNETCORE_ENVIRONMENT Development"
                    ScriptType: "Inline Script"
                    Inline: |
                      az webapp config appsettings set --name logic-app-$(Build.BuildId) --resource-group $(resourceGroupName) --settings ASPNETCORE_ENVIRONMENT=Development
                      az webapp restart --name logic-app-$(Build.BuildId) --resource-group $(resourceGroupName)
