trigger: none

pr: none

variables:
  - name: artifactName
    value: deploy_artifacts
  - name: devEnvironment
    value: WRKSHP_IS_LogicApp_dev
  - name: vmImage
    value: ubuntu-latest
  - name: armSourceFolder
    value: src/azure-devops-sample/deploy
  - name: serviceConnection
    value: "WRKSHP_IS_ME-MngEnvMCAP675646-emknafo-1 (64c3d212-40ed-4c6d-a825-6adfbdf25dad)-4734"

stages:
  - stage: Builds
    displayName: "Publish IaC Artifacts"
    jobs:
      - job: Build
        pool:
          vmImage: $(vmImage)
        steps:
          - task: CopyFiles@2
            displayName: "Copy ARM templates"
            inputs:
              sourceFolder: "$(armSourceFolder)"
              targetFolder: "$(Build.ArtifactStagingDirectory)"
          - publish: "$(Build.ArtifactStagingDirectory)"
            artifact: $(artifactName)
  - stage: DEV
    displayName: "DEV Deployment"
    variables:
      - template: variables/pipeline-vars.yml
    jobs:
    - deployment: deploy_logicapp_resources
      displayName: Deploy Logic App Resources
      pool:
        vmImage: $(vmImage)
      environment: ${{ parameters.environment }}
      variables:
        deploymentMode: "Incremental"
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: $(artifactName)
              - task: AzureResourceGroupDeployment@2
                displayName: "Deploy Logic App"
                inputs:
                  azureSubscription: ${{ parameters.serviceConnection }}
                  resourceGroupName: $(resourceGroupName)
                  location: $(resourceGroupLocation)
                  csmFile: "$(Pipeline.Workspace)/$(artifactName)/classic/logicapp-template.json"
                  overrideParameters: "
                    -location $(resourceGroupLocation)
                    -environmentName ${{ parameters.environment }}
                    -projectName $(projectName)
                    -logicAppName $(logicAppName)
                    -appServicePlanName $(appServicePlanName)
                    -storageName $(storageName)"
                  deploymentMode: $(deploymentMode)
                  deploymentOutputs: "LogicAppArmOutputs"
              - task: ARM Outputs@6
                displayName: "ARM Outputs"
                inputs:
                  ConnectedServiceNameSelector: "ConnectedServiceNameARM"
                  ConnectedServiceNameARM: ${{ parameters.serviceConnection }}
                  resourceGroupName: $(resourceGroupName)
                  whenLastDeploymentIsFailed: "fail"
              - task: AzureResourceGroupDeployment@2
                displayName: "Deploy Connectors"
                inputs:
                  azureSubscription: ${{ parameters.serviceConnection }}
                  resourceGroupName: $(resourceGroupName)
                  location: $(resourceGroupLocation)
                  csmFile: "$(Pipeline.Workspace)/$(artifactName)/connectors-template.json"
                  overrideParameters: "
                    -location $(resourceGroupLocation)
                    -connections_azureblob_name $(blobConnectionName)
                    -logicAppSystemAssignedIdentityTenantId $(logicAppSystemAssignedIdentityTenantId)
                    -logicAppSystemAssignedIdentityObjectId $(logicAppSystemAssignedIdentityObjectId)"
                  deploymentMode: $(deploymentMode)
              - task: ARM Outputs@6
                displayName: "ARM Outputs Connections"
                inputs:
                  ConnectedServiceNameSelector: "ConnectedServiceNameARM"
                  ConnectedServiceNameARM: ${{ parameters.serviceConnection }}
                  resourceGroupName: $(resourceGroupName)
                  whenLastDeploymentIsFailed: "fail"
              - task: AzureCLI@2
                inputs:
                  # TODO: Fill in with the name of your Azure service connection
                  azureSubscription: ""
                  scriptType: "bash"
                  scriptLocation: "inlineScript"
                  inlineScript: |
                    az functionapp config appsettings set --name $(LAname) --resource-group  $(resourceGroupName) --settings "BLOB_CONNECTION_RUNTIMEURL=$(blobendpointurl)"
                    az functionapp config appsettings set --name $(LAname) --resource-group  $(resourceGroupName) --settings "WORKFLOWS_RESOURCE_GROUP_NAME=$(resourceGroupName)"
                  addSpnToEnvironment: true
                  useGlobalConfig: true
